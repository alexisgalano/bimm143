---
title: "Class 8: Mini Project"
author: "Alexis Galano (PID: A17628362)"
format: html
editor: visual
---

Before we get stuck into project work we will have a quick look at applying PCA to some example RNAseq data (tail end of lab 7).

Read the data

```{r}
url2 <- "https://tinyurl.com/expression-CSV"
rna.data <- read.csv(url2, row.names=1)
head(rna.data)
```


> Q. How many genes are in this dataset?

```{r}
nrow(rna.data)
```


## Run PCA

```{r}
## Again we have to take the transpose of our data 
pca <- prcomp(t(rna.data), scale=TRUE)
 
## Simple un polished plot of pc1 and pc2
plot(pca$x[,1], pca$x[,2], xlab="PC1", ylab="PC2")
```


```{r}
summary(pca)
```

```{r}
pca$x
```
```{r}
# We have 5 wt and 5 ko samples
mycols <- c(rep("blue", 5), rep("red", 5))
mycols

plot(pca$x[,1], pca$x[,2], xlab="PC1", ylab="PC2", col=mycols)
```


```{r}
head(sort(abs(pca$rotation[,1]), decreasing = T))
```


# Analysis of Breast Cancer FNA data


```{r}
wisc.df <- read.csv("WisconsinCancer.csv", row.names=1)
head(wisc.df)
```


Note that the first column here wisc$diagnosis is a pathologist
```{r}
diagnosis <- as.factor(wisc.df$diagnosis)
diagnosis
```


```{r}
wisc.data <- wisc.df[,-1]
head(wisc.data)
```

> Q1. How many observations are in this dataset?

```{r}
nrow(wisc.df)
```
>> A1. 569 observations in this dataset.


> Q2. How many of the observations have a malignant diagnosis?

```{r}
table(wisc.df$diagnosis)
```
>> A2. 212 have a malignant diagnosis.



> Q3. How many variables/features in the data are suffixed with _mean?


```{r}
colnames(wisc.data)
```
```{r}
grep("_mean", colnames(wisc.data), value = T)
```
```{r}
length(grep("_mean", colnames(wisc.data), value = T))
```
>> A3. 10 variables in the data are suffixed with "_mean".


## Principal Component Analysis

Here we will use "prcom()' on the 'wisc.data' object
First, we have to decide whether to use the 'scale=TRUE' 

We can look at the means and sd of each column. If they are similar then we are all good to go.

```{r}
colMeans(wisc.data)
```


```{r}
apply(wisc.data, 2, sd)
```

These are very different so we should set scale=TRUE

```{r}
wisc.pr <- prcomp(wisc.data, scale = T)
summary(wisc.pr)
```

> Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?
>> A4. 44.27%

> Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?
>> A5. 3 PCs capture 72.6% of the original variance.

> Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?
>> A6. 7 PCs capture 91% of the original variance.



## Plotting the PCA results



```{r}
#biplot(wisc.pr)
```

> Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?

```{r}
biplot(wisc.pr)
```
>> A7. It is difficult to understand because its so messy and impossible to read all the stacked numeric values.


We need to make our own plot.
```{r}
attributes(wisc.pr)
```

```{r}
plot(wisc.pr$x[,1], wisc.pr$x[,2], col=diagnosis)
```
> Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?

```{r}
plot(wisc.pr$x[,1], wisc.pr$x[,3], col=diagnosis)
```
>> A8. The plots show that PC1 is capturing a separation of malignant from benign samples. PC2 shows more variance in the original data than PC3.


```{r}
library(ggplot2)

pc <- as.data.frame(wisc.pr$x)

ggplot(pc) + 
  aes(PC1, PC2, col=diagnosis) +
  geom_point()

ggplot

```


```{r}
# Calculate variance of each component
pr.var <- wisc.pr$sdev^2
head(pr.var)
```


## Communicaing PCA results


> Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean?

```{r}
wisc.pr$rotation["concave.points_mean",1]
```
>> A9. -0.26 is the component of the loading vector for the feature concave.points_mean.


> Q10. What is the minimum number of principal components required to explain 80% of the variance of the data?

```{r}
tbl <- summary(wisc.pr)
tbl$importance[3,] > 0.8
```
```{r}
which(tbl$importance[3,] > 0.8 )[1]
```
>> A10. PC5 is the minimum to explain 80% of the variance.


## Hierarchical Clustering

> Q11. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

```{r}

d <- dist( scale(wisc.data))
wisc.hclust <- hclust(d)
plot(wisc.hclust)
```
```{r}
plot(wisc.hclust)
abline(h=18, col="red")
grps <- cutree(wisc.hclust, h=18)
table(grps)
```
>> A11. At a height of about 18 the clustering model has 4 clusters.

Come back here later to see how our cluster grps correspond to M or B groups.

Jumping down to Section 5, skip 4.


## 5. Combining methods

Here we will perform clustering on our PCA results rather than the original data.

In other words we will cluster using 'wisc.pr$x' - our new better variables or PCs. We can choose as many or as few PCs to use as we like. It is your call!

```{r}
d.pc <- dist(wisc.pr$x[, 1:3])
wisc.pr.hclust <- hclust(d.pc, method = "ward.D2")
plot(wisc.pr.hclust)
abline(h=80, col="red")
```



```{r}
grps <- cutree(wisc.pr.hclust, h=80)
table(grps)
```

We can use 'table()' function o make a cross-table as well as just a count table.
```{r}
table(diagnosis)
```

```{r}
table(grps, diagnosis)
```

Write a note here about how to read this cross-table result.
The results indicates that our cluster 1 mostly captures cancer (M) and our cluster 2 mostly captures healthy (B) samples/individuals. 




## 7. Prediction

```{r}
#url <- "new_samples.csv"
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```
```{r}
plot(wisc.pr$x[,1:2], col=grps)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```

This principal analysis method can be very helpful for organizing data that is usually messy or harder to read.


> Q18. Which of these new patients should we prioritize for follow up based on your results?
>> A18. Patient 2 should be prioritized.



































